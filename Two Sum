#include <vector>
#include <unordered_map>

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int, int> numToIndex;
        vector<int> result;

        for (int i = 0; i < nums.size(); ++i) {
            int complement = target - nums[i];

            // Checking if the complement is already there in the map
            if (numToIndex.find(complement) != numToIndex.end()) {
                // if Found the complement return the indices
                result.push_back(numToIndex[complement]);
                result.push_back(i);
                return result;
            }

            // Adding the current number to the map
            numToIndex[nums[i]] = i;
        }

        // If no solution is found return an empty vector 
        return result;
    }
};
